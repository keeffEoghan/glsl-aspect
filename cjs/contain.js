function e(e,n,s,c){Object.defineProperty(e,n,{get:s,set:c,enumerable:!0,configurable:!0})}Object.defineProperty(module.exports,"__esModule",{value:!0,configurable:!0}),e(module.exports,"glsl",function(){return c}),e(module.exports,"default",function(){return a});var n,s={};s="#define GLSLIFY 1\n// Implementations for each dimension.\n\nfloat aspect(in float size, in float scale) {\n    return scale/size;\n}\n\nvec2 aspect(in vec2 size, in vec2 scale) {\n    return scale/size;\n}\n\nvec3 aspect(in vec3 size, in vec3 scale) {\n    return scale/size;\n}\n\nvec4 aspect(in vec4 size, in vec4 scale) {\n    return scale/size;\n}\n\n// These are for `scale` always `float`:\n\nvec2 aspect(in vec2 size, in float scale) {\n    return aspect(size, vec2(scale));\n}\n\nvec3 aspect(in vec3 size, in float scale) {\n    return aspect(size, vec3(scale));\n}\n\nvec4 aspect(in vec4 size, in float scale) {\n    return aspect(size, vec4(scale));\n}\n\nvec2 aspectContain(in vec2 size) {\n    return aspect(size, max(size.x, size.y));\n}\n\nvec3 aspectContain(in vec3 size) {\n    return aspect(size, max(size.x, max(size.y, size.z)));\n}\n\nvec4 aspectContain(in vec4 size) {\n    return aspect(size, max(size.x, max(size.y, max(size.z, size.w))));\n}\n\n";const c=(n=s)&&n.__esModule?n.default:n;var a=c;//# sourceMappingURL=contain.js.map

//# sourceMappingURL=contain.js.map
