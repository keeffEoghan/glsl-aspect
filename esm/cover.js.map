{"mappings":"A,I,E,E,C,EEAA,EAAe,u8BDER,IAAM,E,C,EAAO,I,E,U,C,E,O,C,EAEpB,IAAA,EAAe,S,K,I,C,K,O,C,kC","sources":["<anon>","src/cover.js","src/cover.glsl"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $6b1263d28c344d0b$exports = {};\n$6b1263d28c344d0b$exports = \"#define GLSLIFY 1\\n// Implementations for each dimension.\\n\\nfloat aspect(in float size, in float scale) {\\n    return scale/size;\\n}\\n\\nvec2 aspect(in vec2 size, in vec2 scale) {\\n    return scale/size;\\n}\\n\\nvec3 aspect(in vec3 size, in vec3 scale) {\\n    return scale/size;\\n}\\n\\nvec4 aspect(in vec4 size, in vec4 scale) {\\n    return scale/size;\\n}\\n\\n// These are for `scale` always `float`:\\n\\nvec2 aspect(in vec2 size, in float scale) {\\n    return aspect(size, vec2(scale));\\n}\\n\\nvec3 aspect(in vec3 size, in float scale) {\\n    return aspect(size, vec3(scale));\\n}\\n\\nvec4 aspect(in vec4 size, in float scale) {\\n    return aspect(size, vec4(scale));\\n}\\n\\nvec2 aspectCover(in vec2 size) {\\n    return aspect(size, min(size.x, size.y));\\n}\\n\\nvec3 aspectCover(in vec3 size) {\\n    return aspect(size, min(size.x, min(size.y, size.z)));\\n}\\n\\nvec4 aspectCover(in vec4 size) {\\n    return aspect(size, min(size.x, min(size.y, min(size.z, size.w))));\\n}\\n\\n\";\n\n\nconst $9f36e3b303373d7c$export$c1b1a45ed915aad9 = (0, (/*@__PURE__*/$parcel$interopDefault($6b1263d28c344d0b$exports)));\nvar $9f36e3b303373d7c$export$2e2bcd8739ae039 = $9f36e3b303373d7c$export$c1b1a45ed915aad9;\n\n\nexport {$9f36e3b303373d7c$export$c1b1a45ed915aad9 as glsl, $9f36e3b303373d7c$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=cover.js.map\n","import g from './cover.glsl';\n\nexport const glsl = g;\n\nexport default glsl;\n","#pragma glslify: aspect = require('./index');\n\nvec2 aspectCover(in vec2 size) {\n    return aspect(size, min(size.x, size.y));\n}\n\nvec3 aspectCover(in vec3 size) {\n    return aspect(size, min(size.x, min(size.y, size.z)));\n}\n\nvec4 aspectCover(in vec4 size) {\n    return aspect(size, min(size.x, min(size.y, min(size.z, size.w))));\n}\n\n#pragma glslify: export(aspectCover);\n"],"names":["a","$6b1263d28c344d0b$exports","$9f36e3b303373d7c$export$c1b1a45ed915aad9","__esModule","default","$9f36e3b303373d7c$export$2e2bcd8739ae039","glsl"],"version":3,"file":"cover.js.map"}