{"mappings":"A,I,E,E,C,EEAA,EAAe,8pBDER,IAAM,E,C,EAAO,I,E,U,C,E,O,C,EAEpB,IAAA,EAAe,S,K,I,C,K,O,C,kC","sources":["<anon>","src/index.js","src/index.glsl"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3dc61d2b426c6b88$exports = {};\n$3dc61d2b426c6b88$exports = \"#define GLSLIFY 1\\n// Implementations for each dimension.\\n\\nfloat aspect(in float size, in float scale) {\\n    return scale/size;\\n}\\n\\nvec2 aspect(in vec2 size, in vec2 scale) {\\n    return scale/size;\\n}\\n\\nvec3 aspect(in vec3 size, in vec3 scale) {\\n    return scale/size;\\n}\\n\\nvec4 aspect(in vec4 size, in vec4 scale) {\\n    return scale/size;\\n}\\n\\n// These are for `scale` always `float`:\\n\\nvec2 aspect(in vec2 size, in float scale) {\\n    return aspect(size, vec2(scale));\\n}\\n\\nvec3 aspect(in vec3 size, in float scale) {\\n    return aspect(size, vec3(scale));\\n}\\n\\nvec4 aspect(in vec4 size, in float scale) {\\n    return aspect(size, vec4(scale));\\n}\\n\\n\";\n\n\nconst $c2e8342e8b1c7066$export$c1b1a45ed915aad9 = (0, (/*@__PURE__*/$parcel$interopDefault($3dc61d2b426c6b88$exports)));\nvar $c2e8342e8b1c7066$export$2e2bcd8739ae039 = $c2e8342e8b1c7066$export$c1b1a45ed915aad9;\n\n\nexport {$c2e8342e8b1c7066$export$c1b1a45ed915aad9 as glsl, $c2e8342e8b1c7066$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=index.js.map\n","import g from './index.glsl';\n\nexport const glsl = g;\n\nexport default glsl;\n","// Implementations for each dimension.\n\nfloat aspect(in float size, in float scale) {\n    return scale/size;\n}\n\nvec2 aspect(in vec2 size, in vec2 scale) {\n    return scale/size;\n}\n\nvec3 aspect(in vec3 size, in vec3 scale) {\n    return scale/size;\n}\n\nvec4 aspect(in vec4 size, in vec4 scale) {\n    return scale/size;\n}\n\n// These are for `scale` always `float`:\n\nvec2 aspect(in vec2 size, in float scale) {\n    return aspect(size, vec2(scale));\n}\n\nvec3 aspect(in vec3 size, in float scale) {\n    return aspect(size, vec3(scale));\n}\n\nvec4 aspect(in vec4 size, in float scale) {\n    return aspect(size, vec4(scale));\n}\n\n#pragma glslify: export(aspect);\n"],"names":["a","$3dc61d2b426c6b88$exports","$c2e8342e8b1c7066$export$c1b1a45ed915aad9","__esModule","default","$c2e8342e8b1c7066$export$2e2bcd8739ae039","glsl"],"version":3,"file":"index.js.map"}